from Avatar import Avatar\nfrom Menu import Menu\nfrom Customer import Customer\n# from NLP import NLP\nfrom rapidfuzz.fuzz import partial_ratio\nfrom rapidfuzz.utils import default_process\nfrom rapidfuzz.process import extract, extractOne\n\n\n\n\nclass Chatbot():\n\n    def __init__(self):\n        ''' Constructor Method '''\n        self.waiter = Avatar("Luigi")\n        self.waiter.say("Welcome to Italiabot.")\n        self.menu = Menu("Italia Forever Lunch")\n\n        #  These are the keywords for each option and the corresponding response when choosing that option\n        self.exitRequest =      {\n                "keywords":      ["exit","leave","bye"],\n                "response":      "leave us now"\n        }\n        self.historyRequest =   {\n                "keywords":      ["history", "previous"],\n                "response":      "see your previous orders"\n        }\n        self.menuRequest =      {\n                "keywords":      ["menu", "course", "meal","choice","options"],\n                "response":      "see the menu"\n        }\n        self.orderRequest =     {\n                "keywords":      ["order", "buy","food"],\n                "response":      "order some food"\n        }\n        self.dieRequest =     {\n                "keywords":      ["die", "kill", "kym"],\n                "response":      "kill your self"\n        }\n\n        self.mainOptions = self.exitRequest["keywords"] + self.historyRequest["keywords"] + self.menuRequest["keywords"] + self.orderRequest["keywords"] + self.dieRequest["keywords"]\n\n        # self.exitRequest =      [["exit","leave","bye"],                            "leave us now"]\n        # self.historyRequest =   [["history", "previous"],                           "see your previous orders"]\n        # self.menuRequest =      [["menu", "course", "meal","choice","options"],     "see the menu"]\n        # self.orderRequest =     [["order", "buy","food"],                           "order some food"]\n        # self.dieRequest =     [["die", "kill", "kym"],                           "kill your self"]\n\n\n\n    def getOptions(self,choice=None, options=None):\n        ''' choose from a list options'''\n        matches = []\n        maxConfidence = 0\n\n        while len(matches)==0:\n            if not choice:\n                choice = self.waiter.listen().strip().lower()\n                if not choice:\n                    break\n\n            results = extract(choice, options, scorer=partial_ratio, processor=default_process)\n\n            for result in results:\n                (match, confidence, index) = result\n                print(f"Checking: {result}")\n                if confidence > maxConfidence:\n                    maxConfidence = confidence\n                    matches = [match]\n                elif confidence == maxConfidence:\n                    matches.append(match)\n\n            print(f"You have matched: {','.join(matches)} with confidence level {maxConfidence}% {len(matches)}")\n\n            # if len(matches)>1:\n            #     self.waiter.say(f"Sorry, I am not sure if you wanted {' or '.join(matches)}. Please try again.")\n            #     options = matches\n            #     matches = []\n            #     maxConfidence = 0\n\n        return matches[0] if len(matches)>0 else []\n\n    def getCustomer(self):\n        '''Get a customer - using username typed in for accuracy '''\n        # get user name - typed\n        print("Italiabot")\n        username = self.waiter.listen("Please enter your username: ",useSR=False)\n        print(".... Checking our customer database.....")\n        # lookup customer -> new or existing?\n        self.customer = Customer(username)\n        \n\n        self.waiter.say(f"Welcome {self.customer.getFirstName()} {self.customer.getLastName()}.  May I call your {self.customer.getFirstName()}?")\n\n    def getRequest(self):\n        response = None\n\n        while not response:\n            self.waiter.say(f"Ok {self.customer.getFirstName()}. What would you like to do? ")\n\n            option = self.waiter.listen("Order food? See the menu? Look at your order history? or Exit?")\n\n            choice = self.getOptions(option, self.mainOptions)\n\n            if choice in self.exitRequest[0]:\n                response = self.exitRequest[1]\n            elif choice in self.historyRequest[0]:\n                response = self.historyRequest[1]\n            elif choice in self.menuRequest[0]:\n                response = self.menuRequest[1]\n            elif choice in self.orderRequest[0]:\n                response = self.orderRequest[1]\n            else:\n                self.waiter.say(f"I am sorry, I don't understand your choice. You said: '{option}. Please try again.")\n\n        self.waiter.say(f"Right, You chose to {response}.")\n        return choice\n\n    def displayOrderHistory(self):\n        self.waiter.say(f"Ok, {self.customer.getFirstName()}. Let's show your previous orders. ")\n\n    def displayMenu(self):\n        self.waiter.say(f"Alright, {self.customer.getFirstName()}. Let's see the menu. ")\n        self.menu.display()\n\n    def orderFood(self):\n        self.waiter.say(f"Prego, {self.customer.getFirstName()}. Let's order some food. ")\n\n\n\n\n\n    def run(self):\n        # get the customer\n        self.getCustomer()\n\n        # LOOP - 1) Order? 2) View Menu 3) Order History 4) Leave/Exit\n        running = True\n        while running:\n\n            choice = self.getRequest()\n            print(choice)\n\n            if choice in self.exitRequest[0]:\n                self.waiter.say(f"Thank you, {self.customer.getFirstName()}, for ordering with Italiabot today. Bye bye")\n                running = False\n\n            elif choice in self.historyRequest[0]:\n                self.displayOrderHistory()\n            elif choice in self.menuRequest[0]:\n                self.displayMenu()\n            elif choice in self.orderRequest[0]:\n                self.orderFood()\n            elif choice in self.dieRequest[0]:\n                self.waiter.say(f"KYS")\n                running = False\n\ndef main():\n    print("main")\n    italiabot = Chatbot()\n\n    italiabot.run()\n\n main()